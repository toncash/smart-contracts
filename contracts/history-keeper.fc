#pragma version >=0.2.0;
#include "imports/stdlib.fc";
#include "imports/utils.fc";

int min_tons_for_storage() asm "10000000 PUSHINT"; ;; 0.01 TON
int gas_consumption() asm "15000000 PUSHINT"; ;; 0.015 TON

(int, slice, int, int, cell) load_data() inline_ref {
    var ds = get_data().begin_parse();
    return (
            ds~load_uint(64), ;; counter_ids
            ds~load_msg_addr(), ;; owner_address
            ds~load_uint(64), ;; count_all_deals
            ds~load_uint(64), ;; count_canceled_deals
            ds~load_ref()  ;; deal_code
    );
}

() save_data(int counter_ids, slice owner_address, int count_all_deals, int count_canceled_deals, cell deal_code) impure inline {
    set_data(begin_cell()
            .store_uint(counter_ids, 64)
            .store_slice(owner_address)
            .store_uint(count_all_deals, 64)
            .store_uint(count_canceled_deals, 64)
            .store_ref(deal_code)
            .end_cell()
    );
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) { ;; ignore empty messages
        return ();
    }
    (int counter_ids, slice owner_address, int count_all_deals, int count_canceled_deals, cell deal_code) = load_data();
    slice sender_address = parse_sender_address(in_msg_full);

    int op = in_msg_body~load_uint(32);
    int query_id = in_msg_body~load_uint(64);

    var ds = deal_code.begin_parse();
    ds~load_uint(64);   ;; id
    ds~load_msg_addr();     ;; owner_address ...p
    ds~load_msg_addr();     ;; history_keeper
    ds~load_msg_addr();
    int latitude = ds~load_uint(32);
    int longitude = ds~load_uint(32);

    if(op == 1){
        ;; creating deal
        ~dump(my_balance);
        ~dump(msg_value);
        throw_unless(101, equal_slices(sender_address, owner_address));
        cell state_init = calculate_deal_state_init(counter_ids, owner_address, my_address(), deal_code, latitude, longitude);
        slice to_deal_address = calculate_deal_address(state_init);
        int value_to_send = my_balance - msg_value > 1000000 ? msg_value : msg_value - min_tons_for_storage(); ;; my_balance > 0.001 TON

        cell msg_body = begin_cell()
                .store_uint(1, 32)
                .store_uint(query_id, 64)
                .end_cell();

        var msg = begin_cell()
                .store_uint(0x18, 6)
                .store_slice(to_deal_address)
                .store_coins(value_to_send)
                .store_uint(4 + 2 + 1, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 1)
                .store_ref(state_init)
                .store_ref(msg_body);
        send_raw_message(msg.end_cell(), 0);
        ~dump(my_balance);
    }
}

() recv_external(slice in_msg_body) impure {
    ;; handle external messages
}

_ my_get_method() method_id {

}
